{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productsReducers.js","reducers/cartReducers.js","reducers/userReducer.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","actions/productActions.js","components/ProductCarousel.js","components/Paginate.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","path","inline","Row","className","Col","md","Control","name","onChange","target","value","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","row","height","width","margin","display","Message","children","Alert","listProducts","listProductDetails","ProductCarousel","useEffect","xs","Carousel","pause","Image","alt","fluid","Caption","Paginate","split","Pagination","Array","keys","active","HomeScreen","search","startsWith","length","sm","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingReview","errorReview","successReview","params","ListGroup","description","countInStock","disabled","review","createdAt","substring","replace","productId","post","Group","controlId","Label","disable","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","appPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setCategory","setBrand","setCountInStock","setDescription","setImage","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.daa33e32.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\n\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n\r\n} from './reducers/productsReducers'\r\n\r\nimport {\r\n    cartReducer,\r\n} from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducer'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n\r\n\r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n\r\n            }\r\n\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n\r\n\r\n    USER_LOGOUT\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                users: action.payload\r\n            }\r\n\r\n        case USER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case USER_LIST_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_REQUEST,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_RESET,\r\n\r\n\r\n\r\n\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Button, Form, Row, Col } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.path))\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n\r\n        <Form onSubmit={submitHandler} inline>\r\n\r\n            <Row className='g-2'>\r\n\r\n                <Col md={8}>\r\n                    <Form.Control\r\n                        type='text'\r\n                        name='q'\r\n                        onChange={(e) => setKeyword(e.target.value)}\r\n                        className='mr-sm-2 ml-sm-5'\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Col>\r\n\r\n                <Col md>\r\n\r\n                    <Button\r\n                        type='submit'\r\n                        variant='outline-success'\r\n                        className='p-2'\r\n                    >\r\n                        <i className=' fas fa-search'></i>\r\n                    </Button>\r\n                </Col>\r\n            </Row >\r\n\r\n\r\n        </Form>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n\r\n\r\n    USER_LOGOUT,\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        // send email and password and get back the token \r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        // send email and password and get back the token \r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // send email and password and get back the token \r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Nav, Navbar, Container, Row, NavDropdown, } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\nfunction Header() {\r\n\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>eShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                        <SearchBox />\r\n\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart' >\r\n                                <Nav.Link><i className=' fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Log out</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login' >\r\n                                    <Nav.Link><i className='fas fa-user'></i> Login</Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userList'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productsList'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderList'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>Copyright &copy; eShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                {text && text}\r\n            </span>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card, Strong } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n\r\n                </Link>\r\n            </Card.Body>\r\n\r\n            <Card.Text as='div'>\r\n                <div className='my-3'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                </div>\r\n\r\n            </Card.Text>\r\n\r\n            <Card.Text as='h3'>\r\n                ${product.price}\r\n            </Card.Text>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner animation='border' row='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message","import axios from 'axios'\r\n\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n\r\n        })\r\n\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image, Row, Col } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\n\r\nfunction ProductCarousel() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        loading ? <Loader />\r\n            : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Row>\r\n                        <Col\r\n                            xs={5}\r\n                            className='mx-auto'\r\n                        >\r\n                            <Carousel pause='hover'>\r\n                                {products.map(product => (\r\n                                    <Carousel.Item key={product._id}>\r\n                                        <Link to={`/product/${product._id}`}>\r\n                                            <Image src={product.image} alt={product.name} fluid className='center' />\r\n                                            <Carousel.Caption className='carousel.caption'>\r\n                                                <h4>{product.name} (${product.price})</h4>\r\n                                            </Carousel.Caption>\r\n                                        </Link>\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n\r\n                        </Col>\r\n                    </Row >\r\n                )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productsList/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import React, { useState, useEffect } from 'react'\r\nimport products from '../products'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\nimport Paginate from '../components/Paginate'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {(!keyword || keyword.startsWith('?keyword=&page')) && (\r\n                <div>\r\n                    <h1>Top Rated Products</h1>\r\n                    <ProductCarousel />\r\n                </div>\r\n            )\r\n            }\r\n            <h1>Latest Products</h1>\r\n\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n\r\n                    <div>\r\n                        <Row>\r\n                            {!products.length == 0 ? (products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            )))\r\n                                : (\r\n                                    <Message variant='info'>No results found</Message>\r\n                                )\r\n                            }\r\n\r\n\r\n                        </Row>\r\n\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ListGroup, Button, Image, Row, Col, Card, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport products from '../products'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\n\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { loading: loadingReview, error: errorReview, success: successReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successReview])\r\n\r\n    const addToCardHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n\r\n        ))\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'> Back to </Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n\r\n\r\n                        <div>\r\n\r\n                            <Row>\r\n\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant='flush'>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#ffd700'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col><strong>${product.price}</strong></Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCardHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock === 0}\r\n                                                    type='button'>\r\n                                                    Add to Card\r\n                                                </Button>\r\n\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n\r\n\r\n                            <Row>\r\n                                <Col md={6} className='pt-5'>\r\n                                    <h4>\r\n                                        Reviews\r\n                                    </h4>\r\n\r\n                                    {product.reviews.length == 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <Row>\r\n                                                    <Col md={4}>\r\n                                                        <strong>{review.name}</strong>\r\n                                                        <p>{review.createdAt.substring(0, 16).replace(\"T\", \", \")}</p>\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Rating value={review.rating} color={'#ffd700'} />\r\n\r\n                                                    </Col>\r\n\r\n                                                    <p>{review.comment}</p>\r\n\r\n                                                </Row>\r\n                                                <Col>\r\n\r\n                                                </Col>\r\n                                                {/* <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color={'#ffd700'} />\r\n                                                <p>{review.createdAt.substring(0, 16).replace(\"T\", \", \")}</p>\r\n                                                <p>{review.comment}</p> */}\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a Review</h4>\r\n\r\n                                            {loadingReview && <Loader />}\r\n                                            {successReview && <Message variant='success'>Review Submitted</Message>}\r\n\r\n                                            {errorReview && <Message variant='danger'>{errorReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={onSubmitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select..</option>\r\n                                                            <option value='1'>1</option>\r\n                                                            <option value='2'>2</option>\r\n                                                            <option value='3'>3</option>\r\n                                                            <option value='4'>4</option>\r\n                                                            <option value='5'>5</option>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        >\r\n\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        className='mb-3'\r\n                                                        disable={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n\r\n                                    </ListGroup>\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </div>\r\n\r\n\r\n                    )\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport Message from '../components/Message'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        You cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {\r\n                                                [...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )\r\n                }\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Process to Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Card>\r\n\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    // make sure a logged in user cannot login again\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    // make sure a logged in user cannot login again\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <h3 variant='danger'>{message}</h3>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table, } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n\r\n    // make sure a logged in user cannot login again\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo.id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n\r\n            }))\r\n            setMessage('')\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <h3 variant='danger'>{message}</h3>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter Name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Id</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                )}\r\n\r\n\r\n\r\n            </Col>\r\n\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_REQUEST,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_RESET,\r\n\r\n\r\n\r\n} from '../constants/orderConstants'\r\n\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    // check if shipping details are added by the user\r\n    // if not, redict it to the previous page\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>\r\n                        Select Method\r\n                    </Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Cart'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport Message from '../components/Message'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n        dispatch({\r\n            type: ORDER_CREATE_RESET\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},{cart.shippingAddress.city},\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n\r\n                            {cart.cartItems.length === 0 ?\r\n                                'Your Cart is Empty' : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={2}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n\r\n                                    </ListGroup>\r\n                                )\r\n\r\n                            }\r\n\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {error &&\r\n\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>{error}</Message>\r\n                                </ListGroup.Item>\r\n                            }\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\n\r\n\r\n\r\n\r\nfunction OrderScreen({ match, history }) {\r\n\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const appPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AXcHVolSt0RwEU4cGReFC3KfwW6XPj96T2d-eojLkL3-PuCSYov9W0n7PAXp8nLoK_pa2dkqM4J5S70k'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                appPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n\r\n            <h1>Order: {order._id}</h1>\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n\r\n                            <p>\r\n                                <strong>Shipping Address: </strong>\r\n                                {order.shippingAddress.address},{order.shippingAddress.city},\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.deliveredAt.substring(0, 16).replace(\"T\", \", \")}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Status: Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt.substring(0, 16).replace(\"T\", \", \")}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n\r\n                            {order.orderItems.length === 0 ?\r\n                                'Your Cart is Empty' : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={2}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n\r\n                                    </ListGroup>\r\n                                )\r\n\r\n                            }\r\n\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n\r\n                                        />\r\n\r\n\r\n                                    )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        type='button'\r\n                                        className='btn btn-block'\r\n                                        onClick={deliverHandler}\r\n                                    >\r\n                                        Mask as Delivered\r\n                                    </Button>\r\n\r\n                                </ListGroup.Item>\r\n\r\n                            )}\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Form, Button, ButtonGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n\r\n            {loading ?\r\n                <Loader />\r\n                : error ?\r\n                    <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Admin</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )\r\n                                        }</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setAdmin] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userList')\r\n        } else {\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setAdmin(user.isAdmin)\r\n\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to='/admin/userList'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User Details</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{error}</Message>}\r\n\r\n                {loading ? <Loader /> :\r\n                    error ? <Message variant='danger'> {error} </Message>\r\n                        : (\r\n\r\n                            <Form onSubmit={submitHandler}>\r\n\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type='name'\r\n                                        placeholder='Enter Name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    >\r\n\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control\r\n                                        type='email'\r\n                                        placeholder='Enter Email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    >\r\n\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='isadmin'>\r\n                                    <Form.Check\r\n                                        type='checkbox'\r\n                                        label='Is Admin'\r\n                                        checked={isAdmin}\r\n                                        onChange={(e) => setAdmin(e.target.checked)}\r\n                                    >\r\n\r\n                                    </Form.Check>\r\n                                </Form.Group>\r\n\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    Update\r\n                                </Button>\r\n\r\n                            </Form>\r\n\r\n                        )}\r\n\r\n            </FormContainer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\n\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\n\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete this product?\")) {\r\n            dispatch(deleteProduct(id))\r\n\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='alight-items-center'>\r\n\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-left'>\r\n                    <Button className='my-3 float-right' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {successDelete && <Message variant='success'>Product Succesfully Deleted</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading ?\r\n                <Loader />\r\n                : error ?\r\n                    <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Name</th>\r\n                                        <th>Price</th>\r\n                                        <th>Category</th>\r\n                                        <th>Brand</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>{product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                                <Paginate pages={pages} page={page} isAdmin={true} />\r\n                            </Table>\r\n                        </div>\r\n\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport axios from 'axios'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\n\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [category, setCategory] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push(\r\n                '/admin/productsList'\r\n            )\r\n        } else {\r\n\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setDescription(product.description)\r\n                setCategory(product.category)\r\n                setBrand(product.brand)\r\n                setCountInStock(product.countInStock)\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n\r\n    }\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to='/admin/productsList'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product Details</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{error}</Message>}\r\n                {/* {successUpdate && <Message variant='success'>Product Successfully Updated</Message>} */}\r\n\r\n                {loading ? <Loader /> :\r\n                    error ? <Message variant='danger'> {error} </Message>\r\n                        : (\r\n\r\n                            <Form onSubmit={submitHandler}>\r\n\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type='name'\r\n                                        placeholder='Enter Name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    >\r\n\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='price'>\r\n                                    <Form.Label>Price</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        placeholder='Enter Price'\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='image'>\r\n                                    <Form.Label>Image</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Upload Image'\r\n                                        value={image}\r\n                                        onChange={(e) => setImage(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n\r\n                                    <Form.File\r\n                                        id='image-file'\r\n                                        label='Choose File'\r\n                                        custom\r\n                                        onChange={uploadFileHandler}\r\n                                    >\r\n\r\n                                    </Form.File>\r\n                                    {uploading && <Loader />}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='Drand'>\r\n                                    <Form.Label>Brand</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter Brand'\r\n                                        value={brand}\r\n                                        onChange={(e) => setBrand(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='countInStock'>\r\n                                    <Form.Label>Stock</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        placeholder='Enter Stock'\r\n                                        value={countInStock}\r\n                                        onChange={(e) => setCountInStock(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='category'>\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control\r\n\r\n                                        type='text'\r\n                                        placeholder='Enter category'\r\n                                        value={category}\r\n                                        onChange={(e) => setCategory(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='description'>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control\r\n\r\n                                        type='text'\r\n                                        placeholder='Enter description'\r\n                                        value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    Update\r\n                                </Button>\r\n\r\n                            </Form>\r\n\r\n\r\n                        )}\r\n\r\n            </FormContainer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Form, Button, ButtonGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n\r\n            {loading ?\r\n                <Loader />\r\n                : error ?\r\n                    <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>User</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total Price</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delivered</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )\r\n                                        }</td>\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )\r\n                                        }</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}/`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\n\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\n\nimport OrderListScreen from './screens/OrderListScreen'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n\n          <Route path='/product/:id' component={ProductScreen} />\n\n          <Route path='/admin/productsList' component={ProductListScreen} />\n\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/login' component={LoginScreen} />\n\n          <Route path='/register' component={RegisterScreen} />\n\n          <Route path='/profile' component={ProfileScreen} />\n\n          <Route path='/shipping' component={ShippingScreen} />\n\n          <Route path='/payment' component={PaymentScreen} />\n\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n\n          <Route path='/order/:id?' component={OrderScreen} />\n\n          <Route path='/admin/userList' component={UserListScreen} />\n\n          <Route path='/admin/orderList' component={OrderListScreen} />\n\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}